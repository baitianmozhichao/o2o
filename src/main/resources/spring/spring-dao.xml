<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<!--<bean class="com.imooc.myo2o.util.EncryptPropertyPlaceholderConfigurer">-->
		<!--<property name="locations">-->
			<!--<list>-->
				<!--<value>classpath:jdbc.properties</value>-->
				<!--<value>classpath:redis.properties</value>-->
			<!--</list>-->
		<!--</property>-->
		<!--<property name="fileEncoding" value="UTF-8" />-->
	<!--</bean>-->
	<context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 2.数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

	<!-- 3.配置SqlSessionFactory对象 -->
	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
		<!--&lt;!&ndash; 注入数据库连接池 &ndash;&gt;-->
		<!--<property name="dataSource" ref="dataSource" />-->
		<!--&lt;!&ndash; 配置MyBaties全局配置文件:mybatis-config.xml &ndash;&gt;-->
		<!--<property name="configLocation" value="classpath:mybatis-config.xml" />-->
		<!--&lt;!&ndash; 扫描entity包 使用别名 &ndash;&gt;-->
		<!--<property name="typeAliasesPackage" value="com.mzc.o2o.entity" />-->
		<!--&lt;!&ndash; 扫描sql配置文件:mapper需要的xml文件 &ndash;&gt;-->
		<!--<property name="mapperLocations" value="classpath:mapper/*.xml" />-->
	<!--</bean>-->

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
		<!--&lt;!&ndash; 注入sqlSessionFactory &ndash;&gt;-->
		<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
		<!--&lt;!&ndash; 给出需要扫描Dao接口包 &ndash;&gt;-->
		<!--<property name="basePackage" value="com.mzc.o2o.dao" />-->
	<!--</bean>-->

	<!-- 3、配置mybatis-plus的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="typeAliasesPackage" value="com.mzc.o2o.entity"/>

        <property name="globalConfig" ref="globalConfiguration"/>
	</bean>

	<!-- 4、DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mzc.o2o.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

    <!-- 5、mybatisplus的全局策略配置 【重要】 -->
    <bean id="globalConfiguration" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <!-- 2.3版本后，驼峰命名默认值就是true，所以可不配置 -->
        <property name="dbColumnUnderline" value="true"/>
        <!-- 全局主键自增策略，0表示auto，省去配置@TableId(..,type = IdType.AUTO) -->
        <property name="idType" value="0"/>
        <!-- 全局表前缀配置 省去配置@TableName，如'tb_Area'->'Area'的映射-->
        <property name="tablePrefix" value="tb_"/>
    </bean>
</beans>